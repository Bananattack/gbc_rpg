SECTION "ram", BSS
SCROLL_SPEED EQU 1

; Space allocated for stack-related stuff.
STACK_SIZE EQU $100

; The reserved stack area.
stack DS STACK_SIZE
; The top of the stack.
stack_top DS 0

; Size of the buffer that contains the sprites.
SPRITE_BUFFER_SIZE EQU $9F
; Work space for buffering sprites. Loaded by OAM DMA during vblank.
sprite_buffer DS SPRITE_BUFFER_SIZE

; Scatch area for 16 various temporary values.
t0 DS 1
t1 DS 1
t2 DS 1
t3 DS 1
t4 DS 1
t5 DS 1
t6 DS 1
t7 DS 1
t8 DS 1
t9 DS 1
t10 DS 1
t11 DS 1
t12 DS 1
t13 DS 1
t14 DS 1
t15 DS 1

; The hardware type of the handheld running this ROM.
hardware_type DS 1
HARDWARE_DMG EQU 0
HARDWARE_GBC EQU 1
HARDWARE_GBA EQU 2

; Currently selected ROM bank in the cartridge.
active_rom_bank DS 1
; Currently selected RAM bank in the cartridge.
active_ram_bank DS 1

; Used to request a draw during vblank.
; Is unset by the vblank routine when it finishes.
redraw_request DS 1

; Camera motion, bitfield to indicate what directions need buffering.
; Requested camera motion to take next. stat -> main (stat: RW, main: R)
camera_motion_request DS 1
; Camera motion being worked on. Used internally by main. (main: RW)
camera_motion_working DS 1
; Direction the camera is currently moving, after work is ready. main -> stat (main: RW, stat: R)
camera_motion_current DS 1

CAMERA_MOTION_LEFT EQU $01
CAMERA_MOTION_RIGHT EQU $02
CAMERA_MOTION_UP EQU $04
CAMERA_MOTION_DOWN EQU $08
CAMERA_MOTION_BIT_LEFT EQU 0
CAMERA_MOTION_BIT_RIGHT EQU 1
CAMERA_MOTION_BIT_UP EQU 2
CAMERA_MOTION_BIT_DOWN EQU 3

; Camera position.
camera_x_lo DS 1
camera_x_hi DS 1
camera_y_lo DS 1
camera_y_hi DS 1

; Camera tile position.
camera_tile_x_lo DS 1
camera_tile_x_hi DS 1
camera_tile_y_lo DS 1
camera_tile_y_hi DS 1

; Joypad data.
joy_controls DS 1
joy_unpress DS 1

; Current scanline index.
scan_counter    DS 1

; Map dimensions in tiles. Always a power of two >= 16.
map_width_lo DS 1
map_width_hi DS 1
map_height_lo DS 1
map_height_hi DS 1

; Number of shifts to get next row of the map.
; Works since map dimensions are a power of two.
map_width_shift DS 1

; Temporary buffer for unpacking metatile maps.
tmp_buf_tile DS 64
tmp_buf_attr DS 64

; The lock for ensuring mutual exclusion to the tmp buf.
; The value specifies what is using the lock currently.
; If nothing is using the lock, this is the value 0.
tmp_buf_lock DS 1

TMP_BUF_LOCK_HSCROLL EQU 1
TMP_BUF_LOCK_VSCROLL EQU 2
TMP_BUF_LOCK_SCREENSHOT EQU 2

; The event to call when main loop is iterated.
step_event_bank DS 1
step_event_lo DS 1
step_event_hi DS 1
; The event to call once per frame, when the screen reaches a given scanline.
scan_scanline DS 1
scan_event_bank DS 1
scan_event_lo DS 1
scan_event_hi DS 1
; The event to call once per frame, when the screen is fully drawn.
draw_event_bank DS 1
draw_event_lo DS 1
draw_event_hi DS 1

textbox_mode DS 1
TEXTBOX_Y EQU 0
TILE_ICON_CURSOR EQU $C8
TILE_BOX_FRAME EQU $CA
TILE_DIGIT_0 EQU $BC
TILE_COLON EQU $C7
SPR_ICON_BONE EQU $48
SPR_ICON_POISON EQU $4A
MAIN_MENU_OPTIONS_Y EQU 1
MAIN_MENU_TIMER_Y EQU 11

gradient_index DS 1

; Current cursor position.
MENU_CURSOR_REPEAT EQU 12
menu_repeat_delay DS 1
menu_cursor_y DS 1
menu_cursor_old_y DS 1

; Timer system
timer_steps DS 1
timer_seconds DS 1
timer_minutes DS 1
timer_hours DS 1

; Current menu mode
menu_loaded DS 1
menu_mode DS 1
MENU_MODE_OFF EQU 0
MENU_MODE_MAIN EQU 1
MENU_MODE_ITEM EQU 2

; Pointer to buffered vblank copy code.
map_buf_ptr_lo DS 1
map_buf_ptr_hi DS 1

; Unrolled code of the form:
; Executed on vblank.
; ld a, $nn ; 8 cycles / 2 bytes
; ld [$nnnn], a ; 16 cycles / 3 bytes
; ...
; ret
map_buf_data DS 512

graphical_buffer DS 1024